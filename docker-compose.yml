version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: skill_swap_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: skill_swap_db
      POSTGRES_USER: skill_swap_user
      POSTGRES_PASSWORD: skill_swap_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - skill_swap_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skill_swap_user -d skill_swap_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: skill_swap_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@skillswap.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - skill_swap_network
    depends_on:
      postgres:
        condition: service_healthy

  # Node.js Backend API
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: skill_swap_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://skill_swap_user:skill_swap_password@postgres:5432/skill_swap_db
      JWT_SECRET: your_jwt_secret_key_here_change_in_production
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
      - /app/node_modules
    networks:
      - skill_swap_network
    depends_on:
      postgres:
        condition: service_healthy

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: skill_swap_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    networks:
      - skill_swap_network
    depends_on:
      - backend

  # Redis for Caching & Sessions
  redis:
    image: redis:7-alpine
    container_name: skill_swap_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - skill_swap_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  skill_swap_network:
    driver: bridge 